<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Contagem de Produtos</title>
  <link rel="stylesheet" href="style.css">
  <script type="module" src="script.js" defer></script>
</head>
<body>
  <div class="container">
    <h1>Contagem de Produtos</h1>
    <button id="addRow">+ Adicionar Produto</button>
    <button id="resetCounts">Zerar Contagem</button>
    <div class="header-row">
      <span>Produto</span>
      <span>Grupo</span>
      <span>Estoque</span>
      <span>Bar</span>
      <span>Avarias</span>
      <span>Total</span>
      <span>Ações</span>
    </div>
    <div id="tabela"></div>
  </div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
    import { getDatabase, ref, onValue, set } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyBMVXlYLkJ7CU-4_k75f8wFzMEzAr4g_2g",
      authDomain: "contagemdeprodutos-62d48.firebaseapp.com",
      databaseURL: "https://contagemdeprodutos-62d48-default-rtdb.firebaseio.com",
      projectId: "contagemdeprodutos-62d48",
      storageBucket: "contagemdeprodutos-62d48.appspot.com",
      messagingSenderId: "203996681838",
      appId: "1:203996681838:web:c1ef444145e7086998387f"
    };

    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);

    const tabela = document.getElementById("tabela");
    const addRowBtn = document.getElementById("addRow");
    const resetBtn = document.getElementById("resetCounts");

    function calcularTotal(e, b, a) {
      return Number(e) + Number(b) + Number(a);
    }

    function updateTotal(row) {
      const inputs = row.querySelectorAll("input");
      const totalSpan = row.querySelector("span.total");
      const [produto, grupo, estoque, bar, avarias] = inputs;
      totalSpan.textContent = calcularTotal(estoque.value, bar.value, avarias.value);
      save();
    }

    function createRow(id, data = {}) {
      const row = document.createElement("div");
      row.className = "row";

      const produto = document.createElement("input");
      produto.value = data.produto || "";
      produto.addEventListener("input", save);

      const grupo = document.createElement("input");
      grupo.value = data.grupo || "";
      grupo.addEventListener("input", save);

      const estoque = document.createElement("input");
      estoque.type = "number";
      estoque.value = data.estoque || 0;
      estoque.addEventListener("input", () => updateTotal(row));

      const bar = document.createElement("input");
      bar.type = "number";
      bar.value = data.bar || 0;
      bar.addEventListener("input", () => updateTotal(row));

      const avarias = document.createElement("input");
      avarias.type = "number";
      avarias.value = data.avarias || 0;
      avarias.addEventListener("input", () => updateTotal(row));

      const total = document.createElement("span");
      total.className = "total";
      total.textContent = calcularTotal(estoque.value, bar.value, avarias.value);

      const excluir = document.createElement("button");
      excluir.textContent = "Excluir";
      excluir.onclick = () => {
        row.remove();
        save();
      };

      row.append(produto, grupo, estoque, bar, avarias, total, excluir);
      tabela.appendChild(row);
    }

    function save() {
      const rows = Array.from(tabela.children).map(row => {
        const inputs = row.querySelectorAll("input");
        const total = row.querySelector("span.total").textContent;
        return {
          produto: inputs[0].value,
          grupo: inputs[1].value,
          estoque: inputs[2].value,
          bar: inputs[3].value,
          avarias: inputs[4].value,
          total
        };
      });

      set(ref(db, "produtos"), rows);
    }

    function resetContagem() {
      Array.from(tabela.children).forEach(row => {
        const inputs = row.querySelectorAll("input");
        inputs[2].value = 0;
        inputs[3].value = 0;
        inputs[4].value = 0;
        updateTotal(row);
      });
      save();
    }

    onValue(ref(db, "produtos"), (snapshot) => {
      const data = snapshot.val();
      if (data) {
        tabela.innerHTML = "";
        data.forEach((item, i) => createRow(i, item));
      }
    });

    addRowBtn.onclick = () => createRow(Date.now());
    resetBtn.onclick = resetContagem;
  </script>
</body>
</html>

